@model Capstone.Models.Utenti

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Utenti</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdUtente)

    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (User.IsInRole("Admin"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Ruolo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ruolo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ruolo, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Indirizzo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Indirizzo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Indirizzo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsAzienda, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            si: @Html.CheckBoxFor(model => model.IsAzienda, new { htmlAttributes = new { @class = "form-control", @id = "IsAzienda" } })
            no: <input type="checkbox" id="Check" name="Check" value="" />
            @Html.ValidationMessageFor(model => model.IsAzienda, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" id="CF">
        @Html.LabelFor(model => model.CodiceFiscale, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CodiceFiscale, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CodiceFiscale, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" id="PI">
        @Html.LabelFor(model => model.PartitaIva, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PartitaIva, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PartitaIva, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{

    <script type="text/javascript">
        //All'avvio della view l'input con id IsAzienda sarà Checked
        $("#IsAzienda").prop("checked", true);
        //L'input CodiceFiscale sarà nascosto
        $("#CF").hide()

        $(document).ready(function () {
            //Se IsAzienda is Checked nasconde l'input CodiceFiscale e mostra l'input PartitaIva
            $("#IsAzienda").change(function () {
                if ($("#IsAzienda").is(':checked')) {
                    console.log("Azienda");
                    $("#Check").prop("checked", false);
                    $("#CF").hide()
                    $("#PI").show()
                }
            })
            //Altrimenti nasconde la PartitaIva e mostra Il CodiceFiscale
            $("#Check").change(function () {
                if ($("#Check").is(':checked')) {
                    console.log("true");
                    $("#CF").show()
                    $("#PI").hide()
                    $("#IsAzienda").prop("checked", false);
                }
            })

        })
    </script>

}